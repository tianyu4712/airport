{"remainingRequest":"/Users/tianyu/Desktop/jichang20191211(1)(2)/node_modules/babel-loader/lib/index.js!/Users/tianyu/Desktop/jichang20191211(1)(2)/node_modules/eslint-loader/index.js??ref--13-0!/Users/tianyu/Desktop/jichang20191211(1)(2)/src/libs/api.js","dependencies":[{"path":"/Users/tianyu/Desktop/jichang20191211(1)(2)/src/libs/api.js","mtime":1576051772000},{"path":"/Users/tianyu/Desktop/jichang20191211(1)(2)/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianyu/Desktop/jichang20191211(1)(2)/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tianyu/Desktop/jichang20191211(1)(2)/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* eslint-disable */\nimport axios from 'axios';\nimport qs from 'qs';\n\nvar md5 = require('md5');\n\nvar parkNumber = \"p190719151450\";\nvar key = \"42005bdc5bfab8f8cdc9d23cf7f16585\"; // 47.92.114.108:8088\n\nvar keyp = key + parkNumber;\nconsole.log(\"key======\" + key);\nconsole.log(\"parkNumber======\" + parkNumber);\nconsole.log(\"key+parkNumber======\" + keyp);\nvar sign = md5(keyp);\nconsole.log(\"md5======\" + sign);\naxios.defaults.headers.common[\"sign\"] = sign;\nvar instanceAxios = axios.create({});\nconsole.log(qs); // let baseUrl = 'http://ai.bluecardsoft.com.cn'\n\nvar baseUrl = 'http://47.92.114.108:8088'; // parkNumber：p190719151450\n// key：42005bdc5bfab8f8cdc9d23cf7f16585\n// 测试云地址：ai.bluecardsoft.com.cn（IP：47.92.106.54）\n// 接口规范 \n// 所有请求/返回数据格式采用 UTF-8 格式; \n// 所有请求采用 HTTP 协议，POST 请求方式; \n// 所有请求数据依据标准格式加密:md5(key+parkNumber) ,key 由蓝卡开发者分配,\n// 每 次请求时需要在请求头中加入一个字段 sign,sign 字段的值即 md5 加密后的密文,返回 数据无需加密,\n// 注意:加密后的密文采用 32 位小写格式;\n//test\n\nexport var testPost = function testPost(params) {\n  return instanceAxios.post(\"\".concat(baseUrl, \"/bcopenapi/out/getChargebf\"), params).then(function (res) {\n    return res.data;\n  });\n}; // 4.4.请求算费\n\nexport var getChargebf = function getChargebf(params) {\n  return instanceAxios.post(\"\".concat(baseUrl, \"/bcopenapi/out/getChargebf\"), params).then(function (res) {\n    return res.data;\n  });\n}; // 4.4.请求算费\n\nexport var sendPayRes = function sendPayRes(params) {\n  return instanceAxios.post(\"\".concat(baseUrl, \"/bcopenapi/out/sendPayRes\"), params).then(function (res) {\n    return res.data;\n  });\n}; //获取微信相关\n\nexport var getJsSDK = function getJsSDK(params) {\n  return instanceAxios.post(\"\".concat(baseUrl, \"/bcopenapi/out/getChargebf\"), params).then(function (res) {\n    return res.data;\n  });\n};",{"version":3,"sources":["/Users/tianyu/Desktop/jichang20191211(1)(2)/src/libs/api.js"],"names":["axios","qs","md5","require","parkNumber","key","keyp","console","log","sign","defaults","headers","common","instanceAxios","create","baseUrl","testPost","params","post","then","res","data","getChargebf","sendPayRes","getJsSDK"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AAEA,IAAIC,UAAU,GAAI,eAAlB;AACA,IAAIC,GAAG,GAAM,kCAAb,C,CACA;;AACA,IAAIC,IAAI,GAAGD,GAAG,GAACD,UAAf;AACAG,OAAO,CAACC,GAAR,CAAY,cAAYH,GAAxB;AACAE,OAAO,CAACC,GAAR,CAAY,qBAAmBJ,UAA/B;AACAG,OAAO,CAACC,GAAR,CAAY,yBAAuBF,IAAnC;AACA,IAAIG,IAAI,GAAGP,GAAG,CAACI,IAAD,CAAd;AACAC,OAAO,CAACC,GAAR,CAAY,cAAYC,IAAxB;AACAT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,MAA9B,IAAwCH,IAAxC;AACA,IAAII,aAAa,GAAGb,KAAK,CAACc,MAAN,CAAa,EAAb,CAApB;AACAP,OAAO,CAACC,GAAR,CAAYP,EAAZ,E,CACA;;AACA,IAAIc,OAAO,GAAG,2BAAd,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AAChC,SAAOJ,aAAa,CAACK,IAAd,WAAsBH,OAAtB,iCAA2DE,MAA3D,EAAmEE,IAAnE,CAAwE,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA3E,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAL,MAAM,EAAI;AACnC,SAAOJ,aAAa,CAACK,IAAd,WAAsBH,OAAtB,iCAA2DE,MAA3D,EAAmEE,IAAnE,CAAwE,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA3E,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAN,MAAM,EAAI;AAClC,SAAOJ,aAAa,CAACK,IAAd,WAAsBH,OAAtB,gCAA0DE,MAA1D,EAAkEE,IAAlE,CAAuE,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA1E,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAP,MAAM,EAAI;AAChC,SAAOJ,aAAa,CAACK,IAAd,WAAsBH,OAAtB,iCAA2DE,MAA3D,EAAmEE,IAAnE,CAAwE,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA3E,CAAP;AACD,CAFM","sourcesContent":["/* eslint-disable */\nimport axios from 'axios'\nimport qs from 'qs'\nvar md5 = require('md5');\n\nlet parkNumber =  \"p190719151450\"\nlet key   =  \"42005bdc5bfab8f8cdc9d23cf7f16585\"\n// 47.92.114.108:8088\nvar keyp = key+parkNumber\nconsole.log(\"key======\"+key)\nconsole.log(\"parkNumber======\"+parkNumber)\nconsole.log(\"key+parkNumber======\"+keyp)\nlet sign = md5(keyp)\nconsole.log(\"md5======\"+sign)\naxios.defaults.headers.common[\"sign\"] = sign;\nlet instanceAxios = axios.create({})\nconsole.log(qs)\n// let baseUrl = 'http://ai.bluecardsoft.com.cn'\nlet baseUrl = 'http://47.92.114.108:8088'\n\n// parkNumber：p190719151450\n// key：42005bdc5bfab8f8cdc9d23cf7f16585\n// 测试云地址：ai.bluecardsoft.com.cn（IP：47.92.106.54）\n\n// 接口规范 \n// 所有请求/返回数据格式采用 UTF-8 格式; \n// 所有请求采用 HTTP 协议，POST 请求方式; \n// 所有请求数据依据标准格式加密:md5(key+parkNumber) ,key 由蓝卡开发者分配,\n// 每 次请求时需要在请求头中加入一个字段 sign,sign 字段的值即 md5 加密后的密文,返回 数据无需加密,\n// 注意:加密后的密文采用 32 位小写格式;\n\n//test\nexport const testPost = params => {\n  return instanceAxios.post(`${baseUrl}/bcopenapi/out/getChargebf`, params).then(res => res.data);\n};\n\n// 4.4.请求算费\nexport const getChargebf = params => {\n  return instanceAxios.post(`${baseUrl}/bcopenapi/out/getChargebf`, params).then(res => res.data);\n};\n\n// 4.4.请求算费\nexport const sendPayRes = params => {\n  return instanceAxios.post(`${baseUrl}/bcopenapi/out/sendPayRes`, params).then(res => res.data);\n};\n\n//获取微信相关\nexport const getJsSDK = params => {\n  return instanceAxios.post(`${baseUrl}/bcopenapi/out/getChargebf`, params).then(res => res.data);\n};"]}]}